//
// Copyright Â© 2024, David W. Berry
// All rights reserved.
//

import Foundation

/// An add-on protocol to describe a class which must be closed after use.
public protocol HasClose {
    /// Close an instance after usage.
    func close() throws
}

public extension HasClose {
    /// Execute a block of code guaranteeing it is `close`d after usage.
    /// - Parameter body: block to be safely executed
    /// - Returns value returned by `body` if any.
    /// - Throws Rethrows any exception generated by `body`.
    func use<T>(_ body: (Self) throws -> T) rethrows -> T {
        defer { try? close() }
        return try body(self)
    }
}
